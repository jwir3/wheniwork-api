> Example Object

```json
<%= print_json(data.objects['shift']) %>

```

Shifts provide the basis for scheduling. Many other objects, including Locations, Positions, Sites and Users all link through Shifts.


<%= print_table(data.objects['shift'], :header => :shift) %>

## Listing Shifts

> Example Request

```shell
curl <%=@api_prefix%>/2/shifts/?location_id=1&start=2014-03-05 \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->get("shifts", array(
                                "location_id" => 1, 
                                "start"  => "2014-03-05"
                              ));
?>
```

> Example Response

```json
{
  "start": "Wed, 05 Mar 2014 00:00:00 -0600",
  "end": "Sat, 08 Mar 2014 23:59:59 -0600",
  "shifts": [
    <%= print_json(data.objects['shift'], :minimal=>true).indent(4) %>,
    <%= print_json(data.objects['shift'], :minimal=>true, :include=>{'id'=>27384}).indent(4) %>
  ]
}
```

This method allows you to search for shifts. See the parameters below for all the options.

### HTTP Request
`GET <%=@api_prefix%>/2/shifts`

### Parameters

Key | Description
--- | -----------
start | <strong>datetime</strong><br />Start time for a search window
end | <strong>datetime</strong><br />End time for a search window
user_id | <strong>integer, string array</strong><br />Only show shifts for a user, or multiple (e.g. 1,5,3)
location_id | <strong>integer, string array</strong><br />Only show shifts for a location, or multiple.
site_id | <strong>integer, string array</strong><br />Only show shifts for a site, or multiple.
position_id | <strong>integer, string array</strong><br />Only show shifts for a position, or multiple.



## Get Existing Shift

> Example Request

```shell
curl <%=@api_prefix%>/2/shifts/1 \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->get("shifts/1337");
?>
```

> Example Response

```json
{
  "shift": <%= print_json(data.objects['shift'], :minimal=>true,:include=>{:id=>1337, :notes=>"Come in early today."}).indent(2) %>
}
```

### HTTP Request
`GET <%=@api_prefix%>/2/shifts/{id}`

### Parameters

Key | Description
--- | -----------
id | ID of the shift requested.



## Create/Update Shift

> Example Request

```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");

// Create a shift
$result = $wiw->create("shifts", array(...));

// Update a shift
$result = $wiw->update("shifts/10000", array(...));
?>
```

> Example Response

```json
{
  "shift": <%= print_json(data.objects['shift'], :minimal=>true,:include=>{:notes=>"Come in early today."}).indent(2) %>
}
```

### Create HTTP Request
`POST <%=@api_prefix%>/2/shifts/`

### Update HTTP Requests
`PUT <%=@api_prefix%>/2/shifts/{id}`

### Post/Put Body

The `POST` and/or `PUT` body can include fields from the [Shift Object](#shifts).


## Publish/Unpublish Shifts

> Example Request

```shell
curl -X POST <%=@api_prefix%>/2/shifts/publish/ \
 --data '{"ids":[1534,3543,65554,33444]}' \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->post("shifts/publish/", array("ids"=>array(34542,45434)));
?>
```

> Example Response

```json
{
  "success": true
}
```

These methods allow you to publish or unpublish a group of shifts.

### HTTP Request
`POST <%=@api_prefix%>/2/shifts/publish/`

### HTTP Request
`POST <%=@api_prefix%>/2/shifts/unpublish/`


### Parameters

Key | Description
--- | -----------
ids | Post body parameter that can be used to publish multiple shifts. `[4543,23453]`



## Notify Shifts

> Example Request

```shell
curl -X POST <%=@api_prefix%>/2/shifts/notify/ \
 --data '{"start":"2014-05-16 00:00:00", "end":"2014-05-19 23:59:59"}' \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->post("shifts/notify/", array("start"=>"2014-05-16 00:00:00", "end"=>"2014-05-19 23:59:59"));
?>
```

> Example Response

```json
{
  "success": true,
  "email": 12,
  "sms": 4
}
```

This method allows you to notify users about new or updated shifts.

### HTTP Request
`POST <%=@api_prefix%>/2/shifts/notify/`


### Parameters

Key | Description
--- | -----------
start | <strong>datetime</strong><br />Start time for a notify window
end | <strong>datetime</strong><br />End time for a notify window
user_id | <strong>integer, array</strong><br />Only notify shifts for a user, or multiple (e.g. `[1,5,3]`)
location_id | <strong>integer, array</strong><br />Only notify shifts for a location, or multiple.
position_id | <strong>integer, array</strong><br />Only notify shifts for a position, or multiple.
site_id | <strong>integer, array</strong><br />Only notify shifts for a site, or multiple.

> Example Request

```shell
curl -X POST <%=@api_prefix%>/2/shifts/notify/47433 \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->post("shifts/notify/47433");
?>
```

> Example Response

```json
{
  "success": true,
  "email": 1,
  "sms": 0
}
```

You can also send a notification about just one shift using the following

### HTTP Request
`POST <%=@api_prefix%>/2/shifts/notify/{id}`

### Parameters

Key | Description
--- | -----------
id | <strong>integer</strong><br />ID of the shift you want to notify.


## Delete Shift

> Example Request

```shell
curl -X DELETE <%=@api_prefix%>/2/shifts/1 \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->delete("shifts/1337");
?>
```

> Example Response

```json
{
  "success": true
}
```

### HTTP Request
`DELETE <%=@api_prefix%>/2/shifts/{id}`

### Parameters

Key | Description
--- | -----------
id | ID of the shift requested.
ids | Optional query parameter that can be used to delete multiple shifts. `?ids=5,2,34`








