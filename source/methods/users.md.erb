> Example Object

```json
<%= print_json(data.objects['user']) %>

```

Users are the employees, supervisors, and managers that have access to your WhenIWork


<%= print_table(data.objects['user'], :header => :user) %>

## Listing Users

> Example Request

```shell
curl <%=@api_prefix%>/2/users/?location_id=1 \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->get("users");
?>
```
> Example Response

```json
{
  "users": [
    <%= print_json(data.objects['user'], :minimal=>true).indent(4) %>,
    <%= print_json(data.objects['user'], :minimal=>true, :include=>{'id'=>27384,'first_name'=>'Jennifer', 'last_name'=>'Parker', 'email'=>'jen.parker@example.com'}).indent(4) %>
  ]
}
```

This method allows you to search for users. See the parameters below for all the options.

### HTTP Request
`GET <%=@api_prefix%>/2/users`

### Parameters

Key | Description
--- | -----------
location_id | <strong>integer, string</strong><br />Only show shifts for a location, or multiple (e.g. 1,5,3).



## Get Existing User

> Example Request

```shell
curl <%=@api_prefix%>/2/users/1 \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->get("users/1");
?>
```

> Example Response

```json
{
  "user": <%= print_json(data.objects['user'], :minimal=>true,:include=>{:notes=>"This user excels at awesome."}).indent(2) %>
}
```

### HTTP Request
`GET <%=@api_prefix%>/2/users/{id}`

### Parameters

Key | Description
--- | -----------
id | ID of the user requested.



## Create New User
> Example Request

```shell
curl <%=@api_prefix%>/2/users --data '{"first_name":"FirstName", "last_name": "LastName", "email": "user@email.com"}' -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->post("users/", array(
            "first_name"=>"Goldie",
            "last_name"=>"Wilson", 
            "email"=>"goldiewilson@hillvalleycalifornia.gov"
        ));
?>
```

> Example Response

```json
{
  "user": <%= print_json(data.objects['user'], :minimal=>true).indent(2) %>
}

```

### HTTP Request

`POST <%=@api_prefix%>/2/users`

### Parameters

The `POST` body can include fields from the [User Object](#users). You will need
to include at least the 'email' field in the body of the request.

### Additional Params

Key | Description
--- | -----------
reactivate | <strong>boolean</strong><br />Pass this to reactivate a previously deleted user.

## Update Existing User

### HTTP Request
`PUT <%=@api_prefix%>/2/users/{id}`

### Parameters

The `PUT` body can include fields from the [User Object](#users).

### Additional Params

Key | Description
--- | -----------
reactivate | <strong>boolean</strong><br />Pass this to reactivate a previously deleted user.




## Invite Users

> Example Request

```shell
curl -X POST <%=@api_prefix%>/2/users/invite/ \
 --data '{"ids":[14,15,67]}' \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->post("users/invite/", array("ids"=>array(14,15,67)));
?>
```

> Example Response

```json
{
  "count": 3,
  "email": 3,
  "sms": 1,
  "success": true
}
```

Users can be invited by managers, or by supervisors. This will send them an email or text message inviting them to register. Users must already be created to be invited.

### HTTP Request
`POST <%=@api_prefix%>/2/users/invite/`

### Parameters

Key | Description
--- | -----------
ids | <strong>array</strong><br />List of IDs of users to invite.
send_all | <strong>boolean</strong><br />Invite all users without a login. `ids` parameter is ignored.
message | <strong>string</strong><br />An optional message to include in the email invite.

You can also invite a single user with the following.

### HTTP Request
`POST <%=@api_prefix%>/2/users/invite/{id}`

### Parameters

Key | Description
--- | -----------
id | <strong>integer</strong><br />The ID of the user to invite.
message | <strong>string</strong><br />An optional message to include in the email invite.




## Delete User

> Example Request

```shell
curl -X DELETE <%=@api_prefix%>/2/users/4364 \
 -H "W-Token: <%=@wiw_token%>"
```
```php
<?php
$wiw = new Wheniwork("<%=@wiw_token%>");
$result = $wiw->delete("users/4364");
?>
```

> Example Response

```json
{
  "success": true
}
```

Users can be deleted by managers, or by supervisors. If a supervisor, the user must be able to manage all locations the user is attached to.

### HTTP Request
`DELETE <%=@api_prefix%>/2/users/{id}`

### Parameters

Key | Description
--- | -----------
id | ID of the shift requested.
